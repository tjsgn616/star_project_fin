<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.star.mapper.BoardMapper">

<!-- 게시글 테이블 -->
 <sql id="boardColumns">
 	bno
 	, category
 	, user_number
 	, title
 	, content
 	, reg_date
 	, update_date
 	, delete_yn
 </sql>
 
 <!-- 신고 테이블 -->
 <sql id="reportColumns">
 	bno
 	, user_number
 	, report_content
 	, manage_yn
 </sql>
 
 <!-- 댓글 테이블 -->
 <sql id="commentColumns">
 	cmt_num
 	, bno
 	, user_number
 	, cmt_content
 	, write_date
 	, cmt_update
 	, cmt_delete_yn
 </sql>
 
 <!-- 이미지 테이블 -->
 <sql id="imgColumns">
 	img_number
 	, bno
 	, img_path
 	, img_show_yn
 	, img_name
 </sql>
 
 <!-- 게시글 카테고리 -->
 <sql id="categoryColumns">
 	category
 </sql>
 
 
  <sql id="search">
        <!-- 검색 키워드가 있을 때 -->
        <if test="keyword != null and keyword != ''">
            <choose>
                <!-- 검색 유형이 있을 때 -->
                <when test="searchType != null and searchType != ''">
                    <choose>
                        <when test="'title'.equals( searchType )">
                            AND a.title LIKE CONCAT('%', #{keyword}, '%')
                        </when>
                        <when test="'content'.equals( searchType )">
                            AND a.content LIKE CONCAT('%', #{keyword}, '%')
                        </when>
                        <when test="'writer'.equals( searchType )">
                            AND b.user_nickname LIKE CONCAT('%', #{keyword}, '%')
                        </when>
                         <!-- 전체 검색일 때 -->
		                <when test="'all'.equals(searchType)">
		                      AND (
		                      	a.title LIKE CONCAT('%', #{keyword}, '%')
		                      	OR a.content LIKE CONCAT('%', #{keyword}, '%')
		                      	OR b.user_nickname LIKE CONCAT('%', #{keyword}, '%')
		                      )
		                </when>
                    </choose>
                </when>
            </choose>
        </if>
    </sql>
 
 
 
 <!-- 게시글 조회 -->
 <select id="detailBoard" parameterType="BoardDTO" resultType="BoardDTO">
 	select <include refid="boardColumns"/>
 	from board_list
 	where bno = 2
 </select>
 
  <!-- 신고 조회 -->
 <select id="detailReport" parameterType="BoardDTO" resultType="BoardDTO">
 	select <include refid="reportColumns"/>
 	from report_table
 </select>
 
  <!-- 댓글 조회? 따로 댓글 조회 있던데 -->
<!--  <select id="detailComment" parameterType="BoardDTO" resultType="BoardDTO">
 	select <include refid="commentColumns"/>
 	from comment_table
 </select> -->
 
  <!-- 이미지 조회 -->
 <select id="detailImg" parameterType="BoardDTO" resultType="BoardDTO">
 	select <include refid="imgColumns"/>
 	from img_table
 </select>
 
  <!-- 카테고리 조회 -->
 <select id="detailCategory" parameterType="BoardDTO" resultType="BoardDTO">
 	select <include refid="categoryColumns"/>
 	from category
 </select>
 
 
 
 <!-- 게시글 저장 -->
 <insert id="insertBoard" parameterType="BoardDTO" >
 	insert into board_list (
 		<include refid="boardColumns"/>
 	) values (
 		#{bno}
 		, #{category}
 		, #{userNumber}
 		, #{title}
 		, #{content}
 		, now()
 		, null
 		, IFNULL(#{deleteYn},0)
 	) 
 </insert>
 
 
 <!-- 상세 조회 -->
<!--  <select id="selectDetail" parameterType="long" resultType="BoardDTO">
 	select 
 		<include refid="boardColumns"/>
 	from board_list
 	where bno = #{bno}
 	AND delete_yn = 0
 </select> -->
  <select id="selectDetail" parameterType="long" resultType="BoardDTO">
 	SELECT 
 		a.*, b.user_nickname
	FROM 
		 board_list a
	LEFT OUTER JOIN 
		users_table b
    	ON a.user_number  = b.user_number
 	where a.bno = #{bno}
 	AND a.delete_yn = 0
 </select>
 
  <!-- 신고하기 -->
<insert id="report" parameterType="BoardDTO">
	insert into report_table values (
		#{bno}
		,#{userNumber}
		,#{reportContent}
		,0
	);
</insert>
 
 
 <!-- 게시글 리스트 조회 -->
 <select id="selectList" resultType="BoardDTO">
 	SELECT 
 		a.*, b.user_nickname
	FROM 
		 board_list a
	LEFT OUTER JOIN 
		users_table b
    	ON a.user_number  = b.user_number
	WHERE 
		a.delete_yn = 0
	AND 
		a.category = #{category}
		<include refid="search" />
 	ORDER BY
		a.bno DESC
	LIMIT 
		#{skip},#{amount}
 </select>
	
	
<!-- 마이 페이지 글 조회 -->
 <select id="getMyListBoard" parameterType="map" resultType="BoardDTO">
 	SELECT 
 		a.*, b.user_nickname
	FROM 
		 board_list a
	INNER JOIN 
		users_table b
    	ON a.user_number  = b.user_number
	WHERE 
		a.delete_yn = 0
	AND 
		a.user_number = #{userNumber}
	ORDER BY
		a.bno DESC 
	LIMIT 
		#{skip},#{amount}
</select>

<!-- 총 게시글 수 출력 -->
<select id="getCount" resultType="int">
 	SELECT 
 		count(*)
	FROM 
		 board_list a
	LEFT OUTER JOIN
		users_table b
		ON a.user_number = b.user_number
	WHERE 
		a.delete_yn = 0
		<include refid="search" />
	AND a.category = #{category}
</select>

<!-- 총 마이 페이지 수 출력 -->
<select id="getMyCount"  resultType="int">
 	SELECT 
 		count(*)
	FROM 
		 board_list
	WHERE 
		delete_yn = 0
	AND 
		user_number = #{userNumber}
</select>

<!-- 이미지 저장 -->
<insert id="insertImg" parameterType="BoardDTO">
	INSERT INTO img_table
	VALUES (
		#{imgNumber}
		,#{bno}
		,#{imgPath}
		,1
		,#{imgName}
		)
</insert>

<!-- 최근 마지막 게시글 데이터 불러오기 > bno 얻어오기 위해 -->
<select id="getLastBoard" resultType="BoardDTO">
	SELECT 
		*
	FROM 
		board_list
	ORDER BY 
		bno DESC
	LIMIT 1;
</select>

<select id="findWriterFromUserNumber" parameterType="Long" resultType="String">
	select 
		user_nickname 
	from 
		users_table
	where 
		user_number = #{writerNumber};
</select>

<select id="findImgsFromBno" parameterType="Long" resultType="ImgDTO">
	select 
		<include refid="imgColumns"/>
	from 
		img_table
	where 
		bno = #{boardBno}
	and 
		img_show_yn = 1
	order by 
		img_number 
	asc;
</select>


<update id="deleteBoardFromBno" parameterType="Long">
	update
		board_list 
	set
		delete_yn = 1
	where
		bno = #{bno};
</update>

<!-- 게시글 수정 -->
<update id="updateBoard" parameterType="boardDTO">
UPDATE
	board_list
SET
	title = #{title}
	, content = #{content}
	, update_date = now()
WHERE
	bno = #{bno}
AND
	delete_yn = 0
</update>


<!-- 댓글 조회 -->
<select id="getCommentList" parameterType="long" resultType="CommentDTO">
<!--  	SELECT 
 		*
	FROM
		 comment_table
	WHERE 
		cmt_delete_yn = 0
  	AND 
		bno = #{bno}
	ORDER BY
		cmt_num DESC; -->
		
	select 
		 ct.cmt_num
	 	, ct.bno
	 	, ct.user_number
	 	, ct.cmt_content
	 	, ct.write_date
	 	, ct.cmt_update
	 	, ct.cmt_delete_yn
	 	, ut.user_nickname 
	from
		users_table ut
	inner join
		 comment_table ct
	where 
		ct.user_number = ut.user_number
  	AND 
		bno = #{bno}
  	AND 
		cmt_delete_yn = 0
	order 
		by ct.cmt_num desc;
</select>

<!-- 댓글 작성 -->
<insert id="insertComment" parameterType="CommentDTO">
	INSERT INTO comment_table(
		<include refid="commentColumns"/>
	) VALUES (
		#{cmtNum}
		,#{bno} 
		,#{userNumber}
		,#{cmtContent}
		,now()
		,null
		,0
		)
</insert>

<!-- 댓글 삭제 -->
<update id="removeComment" parameterType="CommentDTO">
	UPDATE
		comment_table
	SET
		cmt_delete_yn = 1
	WHERE
		cmt_num = #{cmtNum}
</update>

<!-- 댓글 수정 -->
<update id="alterComment" parameterType="CommentDTO">
	UPDATE
		comment_table
	SET
		cmt_content = #{cmtContent}
	WHERE
		cmt_num = #{cmtNum} 
</update>

<!-- 댓글 수 출력 -->
<select id="getCommentCount"  resultType="int">
 	SELECT 
 		count(*)
	FROM 
		 board_list a 
	INNER JOIN 
		users_table b
    	ON a.user_number  = b.user_number
	WHERE 
		a.delete_yn = 0
	AND 
		a.user_number = #{userNumber}
	limit 
		5;
</select>

<!-- 이미지 수정 여부 -->
<update id="updateImg" parameterType="map">
UPDATE
	img_table
SET
	img_show_yn = 0
WHERE
	img_number = #{imgNumber}
</update>


<select id="getReportBoardList"  resultType="BoardDTO">
	select 
		rt.bno 
		, bl.title 
		, rt.user_number 
		, ut.user_nickname 
		, rt.report_content 
	from 
		report_table rt 
	inner join 
		users_table ut 
	on 
		rt.user_number = ut.user_number
	inner join 
		board_list bl 
	on 
		rt.bno = bl.bno
	where 
		rt.manage_yn = 0
	and 
		bl.delete_yn = 0;

</select>

<update id="managingComplete" parameterType="Long">
	update 
		report_table 
	set 
		manage_yn = 1
	where 
		bno = #{bno};
</update>


</mapper>